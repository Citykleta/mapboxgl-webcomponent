{"version":3,"file":"test.js","sources":["../../node_modules/zora/dist/bundle/module.js","../../src/util.js","../unit/util.js"],"sourcesContent":["const startTestMessage = (test, offset) => ({\n    type: \"TEST_START\" /* TEST_START */,\n    data: test,\n    offset\n});\nconst assertionMessage = (assertion, offset) => ({\n    type: \"ASSERTION\" /* ASSERTION */,\n    data: assertion,\n    offset\n});\nconst endTestMessage = (test, offset) => ({\n    type: \"TEST_END\" /* TEST_END */,\n    data: test,\n    offset\n});\nconst bailout = (error, offset) => ({\n    type: \"BAIL_OUT\" /* BAIL_OUT */,\n    data: error,\n    offset\n});\n\nconst delegateToCounter = (counter) => (target) => Object.defineProperties(target, {\n    skipCount: {\n        get() {\n            return counter.skipCount;\n        },\n    },\n    failureCount: {\n        get() {\n            return counter.failureCount;\n        }\n    },\n    successCount: {\n        get() {\n            return counter.successCount;\n        }\n    },\n    count: {\n        get() {\n            return counter.count;\n        }\n    }\n});\nconst counter = () => {\n    let success = 0;\n    let failure = 0;\n    let skip = 0;\n    return Object.defineProperties({\n        update(assertion) {\n            const { pass, skip: isSkipped } = assertion;\n            if (isSkipped) {\n                skip++;\n            }\n            else if (!isAssertionResult(assertion)) {\n                skip += assertion.skipCount;\n                success += assertion.successCount;\n                failure += assertion.failureCount;\n            }\n            else if (pass) {\n                success++;\n            }\n            else {\n                failure++;\n            }\n        }\n    }, {\n        successCount: {\n            get() {\n                return success;\n            }\n        },\n        failureCount: {\n            get() {\n                return failure;\n            }\n        },\n        skipCount: {\n            get() {\n                return skip;\n            }\n        },\n        count: {\n            get() {\n                return skip + success + failure;\n            }\n        }\n    });\n};\n\nconst defaultTestOptions = Object.freeze({\n    offset: 0,\n    skip: false\n});\nconst noop = () => {\n};\nconst tester = (description, spec, { offset = 0, skip = false } = defaultTestOptions) => {\n    let id = 0;\n    let pass = true;\n    let executionTime = 0;\n    let error = null;\n    const testCounter = counter();\n    const withTestCounter = delegateToCounter(testCounter);\n    const assertions = [];\n    const collect = item => assertions.push(item);\n    const specFunction = skip === true ? noop : function zora_spec_fn() {\n        return spec(assert(collect, offset));\n    };\n    const testRoutine = (async function () {\n        try {\n            const start = Date.now();\n            const result = await specFunction();\n            executionTime = Date.now() - start;\n            return result;\n        }\n        catch (e) {\n            error = e;\n        }\n    })();\n    return Object.defineProperties(withTestCounter({\n        [Symbol.asyncIterator]: async function* () {\n            await testRoutine;\n            for (const assertion of assertions) {\n                assertion.id = ++id;\n                if (assertion[Symbol.asyncIterator]) {\n                    // Sub test\n                    yield startTestMessage({ description: assertion.description }, offset);\n                    yield* assertion;\n                    if (assertion.error !== null) {\n                        // Bubble up the error and return\n                        error = assertion.error;\n                        pass = false;\n                        return;\n                    }\n                }\n                yield assertionMessage(assertion, offset);\n                pass = pass && assertion.pass;\n                testCounter.update(assertion);\n            }\n            return error !== null ?\n                yield bailout(error, offset) :\n                yield endTestMessage(this, offset);\n        }\n    }), {\n        description: {\n            enumerable: true,\n            value: description\n        },\n        pass: {\n            enumerable: true,\n            get() {\n                return pass;\n            }\n        },\n        executionTime: {\n            enumerable: true,\n            get() {\n                return executionTime;\n            }\n        },\n        length: {\n            get() {\n                return assertions.length;\n            }\n        },\n        error: {\n            get() {\n                return error;\n            }\n        },\n        routine: {\n            value: testRoutine\n        },\n        skip: {\n            value: skip\n        }\n    });\n};\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n\nconst isAssertionResult = (result) => {\n    return 'operator' in result;\n};\nconst specFnRegexp = /zora_spec_fn/;\nconst nodeInternal = /node_modules\\/.*|\\(internal\\/.*/;\nconst getAssertionLocation = () => {\n    const err = new Error();\n    const stack = (err.stack || '')\n        .split('\\n')\n        .filter(l => !nodeInternal.test(l) && l !== '');\n    const userLandIndex = stack.findIndex(l => specFnRegexp.test(l));\n    return (userLandIndex >= 1 ?\n        stack[userLandIndex - 1] : (stack[stack.length - 1] || 'N/A'))\n        .trim()\n        .replace(/^at|^@/, '');\n};\nconst assertMethodHook = (fn) => function (...args) {\n    // @ts-ignore\n    return this.collect(fn(...args));\n};\nconst aliasMethodHook = (methodName) => function (...args) {\n    return this[methodName](...args);\n};\nconst AssertPrototype = {\n    equal: assertMethodHook((actual, expected, description = 'should be equivalent') => ({\n        pass: fastDeepEqual(actual, expected),\n        actual,\n        expected,\n        description,\n        operator: \"equal\" /* EQUAL */\n    })),\n    equals: aliasMethodHook('equal'),\n    eq: aliasMethodHook('equal'),\n    deepEqual: aliasMethodHook('equal'),\n    notEqual: assertMethodHook((actual, expected, description = 'should not be equivalent') => ({\n        pass: !fastDeepEqual(actual, expected),\n        actual,\n        expected,\n        description,\n        operator: \"notEqual\" /* NOT_EQUAL */\n    })),\n    notEquals: aliasMethodHook('notEqual'),\n    notEq: aliasMethodHook('notEqual'),\n    notDeepEqual: aliasMethodHook('notEqual'),\n    is: assertMethodHook((actual, expected, description = 'should be the same') => ({\n        pass: Object.is(actual, expected),\n        actual,\n        expected,\n        description,\n        operator: \"is\" /* IS */\n    })),\n    same: aliasMethodHook('is'),\n    isNot: assertMethodHook((actual, expected, description = 'should not be the same') => ({\n        pass: !Object.is(actual, expected),\n        actual,\n        expected,\n        description,\n        operator: \"isNot\" /* IS_NOT */\n    })),\n    notSame: aliasMethodHook('isNot'),\n    ok: assertMethodHook((actual, description = 'should be truthy') => ({\n        pass: Boolean(actual),\n        actual,\n        expected: 'truthy value',\n        description,\n        operator: \"ok\" /* OK */\n    })),\n    truthy: aliasMethodHook('ok'),\n    notOk: assertMethodHook((actual, description = 'should be falsy') => ({\n        pass: !Boolean(actual),\n        actual,\n        expected: 'falsy value',\n        description,\n        operator: \"notOk\" /* NOT_OK */\n    })),\n    falsy: aliasMethodHook('notOk'),\n    fail: assertMethodHook((description = 'fail called') => ({\n        pass: false,\n        actual: 'fail called',\n        expected: 'fail not called',\n        description,\n        operator: \"fail\" /* FAIL */\n    })),\n    throws: assertMethodHook((func, expected, description) => {\n        let caught;\n        let pass;\n        let actual;\n        if (typeof expected === 'string') {\n            [expected, description] = [description, expected];\n        }\n        try {\n            func();\n        }\n        catch (err) {\n            caught = { error: err };\n        }\n        pass = caught !== undefined;\n        actual = caught && caught.error;\n        if (expected instanceof RegExp) {\n            pass = expected.test(actual) || expected.test(actual && actual.message);\n            actual = actual && actual.message || actual;\n            expected = String(expected);\n        }\n        else if (typeof expected === 'function' && caught) {\n            pass = actual instanceof expected;\n            actual = actual.constructor;\n        }\n        return {\n            pass,\n            actual,\n            expected,\n            description: description || 'should throw',\n            operator: \"throws\" /* THROWS */,\n        };\n    }),\n    doesNotThrow: assertMethodHook((func, expected, description) => {\n        let caught;\n        if (typeof expected === 'string') {\n            [expected, description] = [description, expected];\n        }\n        try {\n            func();\n        }\n        catch (err) {\n            caught = { error: err };\n        }\n        return {\n            pass: caught === undefined,\n            expected: 'no thrown error',\n            actual: caught && caught.error,\n            operator: \"doesNotThrow\" /* DOES_NOT_THROW */,\n            description: description || 'should not throw'\n        };\n    })\n};\nconst assert = (collect, offset) => {\n    const actualCollect = item => {\n        if (!item.pass) {\n            item.at = getAssertionLocation();\n        }\n        collect(item);\n        return item;\n    };\n    return Object.assign(Object.create(AssertPrototype, { collect: { value: actualCollect } }), {\n        test(description, spec, opts = defaultTestOptions) {\n            const subTest = tester(description, spec, Object.assign({}, defaultTestOptions, opts, { offset: offset + 1 }));\n            collect(subTest);\n            return subTest.routine;\n        },\n        skip(description, spec = noop, opts = defaultTestOptions) {\n            return this.test(description, spec, Object.assign({}, opts, { skip: true }));\n        }\n    });\n};\n\n// with two arguments\nconst curry = (fn) => (a, b) => b === void 0 ? b => fn(a, b) : fn(a, b);\nconst toCurriedIterable = gen => curry((a, b) => ({\n    [Symbol.asyncIterator]() {\n        return gen(a, b);\n    }\n}));\n\nconst map = toCurriedIterable(async function* (fn, asyncIterable) {\n    let index = 0;\n    for await (const i of asyncIterable) {\n        yield fn(i, index, asyncIterable);\n        index++;\n    }\n});\n\nconst filter = toCurriedIterable(async function* (fn, asyncIterable) {\n    let index = 0;\n    for await (const i of asyncIterable) {\n        if (fn(i, index, asyncIterable) === true) {\n            yield i;\n        }\n        index++;\n    }\n});\n\nconst print = (message, offset = 0) => {\n    console.log(message.padStart(message.length + (offset * 4))); // 4 white space used as indent (see tap-parser)\n};\nconst stringifySymbol = (key, value) => {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return value;\n};\nconst printYAML = (obj, offset = 0) => {\n    const YAMLOffset = offset + 0.5;\n    print('---', YAMLOffset);\n    for (const [prop, value] of Object.entries(obj)) {\n        print(`${prop}: ${JSON.stringify(stringifySymbol(null, value), stringifySymbol)}`, YAMLOffset + 0.5);\n    }\n    print('...', YAMLOffset);\n};\nconst comment = (value, offset) => {\n    print(`# ${value}`, offset);\n};\nconst subTestPrinter = (prefix = '') => (message) => {\n    const { data } = message;\n    const value = `${prefix}${data.description}`;\n    comment(value, message.offset);\n};\nconst mochaTapSubTest = subTestPrinter('Subtest: ');\nconst tapeSubTest = subTestPrinter();\nconst assertPrinter = (diagnostic) => (message) => {\n    const { data, offset } = message;\n    const { pass, description, id } = data;\n    const label = pass === true ? 'ok' : 'not ok';\n    if (isAssertionResult(data)) {\n        print(`${label} ${id} - ${description}`, offset);\n        if (pass === false) {\n            printYAML(diagnostic(data), offset);\n        }\n    }\n    else {\n        const comment = data.skip === true ? 'SKIP' : `${data.executionTime}ms`;\n        print(`${pass ? 'ok' : 'not ok'} ${id} - ${description} # ${comment}`, message.offset);\n    }\n};\nconst tapeAssert = assertPrinter(({ id, pass, description, ...rest }) => rest);\nconst mochaTapAssert = assertPrinter(({ expected, id, pass, description, actual, operator, at, ...rest }) => ({\n    wanted: expected,\n    found: actual,\n    at,\n    operator,\n    ...rest\n}));\nconst testEnd = (message) => {\n    const length = message.data.length;\n    const { offset } = message;\n    print(`1..${length}`, offset);\n};\nconst printBailout = (message) => {\n    print('Bail out! Unhandled error.');\n};\nconst reportAsMochaTap = (message) => {\n    switch (message.type) {\n        case \"TEST_START\" /* TEST_START */:\n            mochaTapSubTest(message);\n            break;\n        case \"ASSERTION\" /* ASSERTION */:\n            mochaTapAssert(message);\n            break;\n        case \"TEST_END\" /* TEST_END */:\n            testEnd(message);\n            break;\n        case \"BAIL_OUT\" /* BAIL_OUT */:\n            printBailout();\n            throw message.data;\n    }\n};\nconst reportAsTapeTap = (message) => {\n    switch (message.type) {\n        case \"TEST_START\" /* TEST_START */:\n            tapeSubTest(message);\n            break;\n        case \"ASSERTION\" /* ASSERTION */:\n            tapeAssert(message);\n            break;\n        case \"BAIL_OUT\" /* BAIL_OUT */:\n            printBailout();\n            throw message.data;\n    }\n};\nconst flatFilter = filter((message) => {\n    return message.type === \"TEST_START\" /* TEST_START */\n        || message.type === \"BAIL_OUT\" /* BAIL_OUT */\n        || (message.type === \"ASSERTION\" /* ASSERTION */ && (isAssertionResult(message.data) || message.data.skip === true));\n});\nconst flattenStream = (stream) => {\n    let id = 0;\n    const mapper = map(message => {\n        if (message.type === \"ASSERTION\" /* ASSERTION */) {\n            const mappedData = Object.assign(message.data, { id: ++id });\n            return assertionMessage(mappedData, 0);\n        }\n        return Object.assign({}, message, { offset: 0 });\n    });\n    return mapper(flatFilter(stream));\n};\nconst printSummary = (harness) => {\n    print('', 0);\n    comment(harness.pass ? 'ok' : 'not ok', 0);\n    comment(`success: ${harness.successCount}`, 0);\n    comment(`skipped: ${harness.skipCount}`, 0);\n    comment(`failure: ${harness.failureCount}`, 0);\n};\nconst tapeTapLike = async (stream) => {\n    print('TAP version 13');\n    const streamInstance = flattenStream(stream);\n    for await (const message of streamInstance) {\n        reportAsTapeTap(message);\n    }\n    print(`1..${stream.count}`, 0);\n    printSummary(stream);\n};\nconst mochaTapLike = async (stream) => {\n    print('TAP version 13');\n    for await (const message of stream) {\n        reportAsMochaTap(message);\n    }\n    printSummary(stream);\n};\n\nconst harnessFactory = () => {\n    const tests = [];\n    const testCounter = counter();\n    const withTestCounter = delegateToCounter(testCounter);\n    const rootOffset = 0;\n    const collect = item => tests.push(item);\n    const api = assert(collect, rootOffset);\n    let pass = true;\n    let id = 0;\n    const instance = Object.create(api, {\n        length: {\n            get() {\n                return tests.length;\n            }\n        },\n        pass: {\n            get() {\n                return pass;\n            }\n        }\n    });\n    return withTestCounter(Object.assign(instance, {\n        [Symbol.asyncIterator]: async function* () {\n            for (const t of tests) {\n                t.id = ++id;\n                if (t[Symbol.asyncIterator]) {\n                    // Sub test\n                    yield startTestMessage({ description: t.description }, rootOffset);\n                    yield* t;\n                    if (t.error !== null) {\n                        pass = false;\n                        return;\n                    }\n                }\n                yield assertionMessage(t, rootOffset);\n                pass = pass && t.pass;\n                testCounter.update(t);\n            }\n            yield endTestMessage(this, 0);\n        },\n        report: async (reporter = tapeTapLike) => {\n            return reporter(instance);\n        }\n    }));\n};\n\nlet autoStart = true;\nlet indent = false;\nconst defaultTestHarness = harnessFactory();\nconst rootTest = defaultTestHarness.test.bind(defaultTestHarness);\nrootTest.indent = () => indent = true;\nconst test = rootTest;\nconst skip = (description, spec, options = {}) => rootTest(description, spec, Object.assign({}, options, { skip: true }));\nrootTest.skip = skip;\nconst equal = defaultTestHarness.equal.bind(defaultTestHarness);\nconst equals = equal;\nconst eq = equal;\nconst deepEqual = equal;\nconst notEqual = defaultTestHarness.notEqual.bind(defaultTestHarness);\nconst notEquals = notEqual;\nconst notEq = notEqual;\nconst notDeepEqual = notEqual;\nconst is = defaultTestHarness.is.bind(defaultTestHarness);\nconst same = is;\nconst isNot = defaultTestHarness.isNot.bind(defaultTestHarness);\nconst notSame = isNot;\nconst ok = defaultTestHarness.ok.bind(defaultTestHarness);\nconst truthy = ok;\nconst notOk = defaultTestHarness.notOk.bind(defaultTestHarness);\nconst falsy = notOk;\nconst fail = defaultTestHarness.fail.bind(defaultTestHarness);\nconst throws = defaultTestHarness.throws.bind(defaultTestHarness);\nconst doesNotThrow = defaultTestHarness.doesNotThrow.bind(defaultTestHarness);\nconst createHarness = () => {\n    autoStart = false;\n    return harnessFactory();\n};\nconst start = () => {\n    if (autoStart) {\n        defaultTestHarness.report(indent ? mochaTapLike : tapeTapLike);\n    }\n};\n// on next tick start reporting\n// @ts-ignore\nif (typeof window === 'undefined') {\n    setTimeout(start, 0);\n}\nelse {\n    // @ts-ignore\n    window.addEventListener('load', start);\n}\n\nexport { AssertPrototype, createHarness, deepEqual, doesNotThrow, eq, equal, equals, fail, falsy, is, isNot, mochaTapLike, notDeepEqual, notEq, notEqual, notEquals, notOk, notSame, ok, same, skip, tapeTapLike, test, throws, truthy };\n","const expressionTest = /^\\d|^\\[|^true|^false/;\n\nexport const parse = string => {\n    if (expressionTest.test(string)) {\n        return JSON.parse(string.replace(/'/g, '\"'));\n    }\n\n    //normal string\n    return string;\n};\n\nexport const stringify = val => typeof val === 'string' ? val : JSON\n    .stringify(val)\n    .replace(/\"/g, '\\'');\n\nexport const instanceToLayerProperties = instance => (acc, prop) => {\n    if ((prop.defaultValue !== void 0) || (instance[kebabToCamel(prop.name)] !== null)) {\n        acc[prop.name] = instance[kebabToCamel(prop.name)];\n    }\n    return acc;\n};\n\nexport const kebabToCamel = prop => prop\n    .split('-')\n    .map((word, index) => {\n        if (index === 0)\n            return word;\n\n        const [first, ...rest] = word;\n\n        return first.toUpperCase() + rest.join('');\n    })\n    .join('');\n\nexport const layerFactory = (layoutProperties, paintProperties, layerType) => {\n\n    const klass = class extends HTMLElement {\n        static get observedAttributes() {\n            return [...paintProperties, ...layoutProperties]\n                .map(({name}) => name);\n        }\n\n        get filter() {\n            return parse(this.getAttribute('filter'));\n        }\n\n        set filter(value) {\n            this.setAttribute('filter', stringify(value));\n        }\n\n        attributeChangedCallback(name, oldValue, newValue) {\n            if (this._map) {\n                if (paintProperties.some(p => p.name === name)) {\n                    this._map.setPaintProperty(this.layerId, name, parse(newValue));\n                } else if (layoutProperties.some(p => p.name === name)) {\n                    this._map.setLayoutProperty(this.layerId, name, parse(newValue));\n                }\n            }\n        }\n\n        set map(value) {\n            if (value !== this._map) {\n                this._map = value;\n                const setProps = instanceToLayerProperties(this);\n                const paint = paintProperties.reduce(setProps, {});\n                const layout = layoutProperties.reduce(setProps, {});\n                const spec = {\n                    type: layerType,\n                    id: this.layerId,\n                    paint,\n                    layout\n                };\n\n                if (this.source) {\n                    spec.source = this.source;\n                }\n\n                if (this.sourceLayer) {\n                    spec['source-layer'] = this.sourceLayer;\n                }\n\n                if (this.filter) {\n                    spec.filter = this.filter;\n                }\n\n                this._map.addLayer(spec);\n            }\n        }\n\n        get layerId() {\n            return this.getAttribute('layer-id');\n        }\n\n        get source() {\n            return this.getAttribute('source');\n        }\n\n        get sourceLayer() {\n            return this.getAttribute('source-layer');\n        }\n\n        constructor() {\n            super();\n        }\n\n        connectedCallback() {\n            this.setAttribute('slot', 'layers');\n        }\n\n        disconnectedCallback() {\n            if (this._map) {\n                this._map.removeLayer(this.layerId);\n            }\n        }\n    };\n\n    for (const p of [...layoutProperties, ...paintProperties]) {\n        Object.defineProperty(klass.prototype, kebabToCamel(p.name), {\n            enumarable: true,\n            get() {\n                const attributeValue = parse(this.getAttribute(p.name));\n                return p.defaultValue !== void 0 ? (\n                        this.hasAttribute(p.name) ? attributeValue :\n                            p.defaultValue) :\n                    attributeValue;\n            },\n            set(value) {\n                this.setAttribute(p.name, stringify(value));\n            }\n        });\n    }\n\n    return klass;\n};\n","import {test} from 'zora';\nimport {kebabToCamel, layerFactory, parse, stringify} from '../../src/util.js';\n\nconst fake = () => {\n    const calls = [];\n    const fn = function (...args) {\n        calls.push(args);\n    };\n\n    Object.defineProperty(fn, 'calledOnce', {\n        get() {\n            return calls.length === 1;\n        }\n    });\n\n    Object.defineProperty(fn, 'calls', {\n        get() {\n            return calls;\n        }\n    });\n\n    Object.defineProperty(fn, 'callCount', {\n        get() {\n            return calls.length;\n        }\n    });\n\n    Object.defineProperty(fn, 'lastCall', {\n        get() {\n            return calls[calls.length - 1];\n        }\n    });\n\n    return fn;\n};\n\ntest('parse a number string should return a number', t => {\n    t.eq(parse('1'), 1);\n    t.eq(parse('0'), 0);\n    t.eq(parse('234'), 234);\n    t.eq(parse('3.14159'), 3.14159);\n});\n\ntest('parse boolean string should return a boolean', t => {\n    t.eq(parse('true'), true);\n    t.eq(parse('false'), false);\n});\n\ntest('parse array string should return an array', t => {\n    t.eq(parse('[1,true]'), [1, true]);\n    t.eq(parse(`[\"true\",'blah']`), ['true', 'blah'], 'should support single quoted string');\n    t.eq(parse('[\"foo\",[4, [true]]]'), ['foo', [4, [true]]], 'should support nested array');\n});\n\ntest('stringify string should return value as it is ', t => {\n    t.eq(stringify('foo bar'), 'foo bar');\n});\n\ntest('stringify boolean', t => {\n    t.eq(stringify(true), 'true');\n    t.eq(stringify(false), 'false');\n});\n\ntest('stringify numbers', t => {\n    t.eq(stringify(0), '0');\n    t.eq(stringify(12), '12');\n    t.eq(stringify(3.14159), '3.14159');\n});\n\ntest('stringify arrays', t => {\n    t.eq(stringify([4, true]), '[4,true]');\n    t.eq(stringify(['foo', 'bar']), `['foo','bar']`, 'string members should be single quoted');\n    t.eq(stringify(['foo', ['bar', [false, 4, 'hello']]]), `['foo',['bar',[false,4,'hello']]]`, 'should work on nexted structure');\n});\n\ntest('kebab to camel case', t => {\n    t.eq(kebabToCamel('circle-radius'), 'circleRadius');\n    t.eq(kebabToCamel('circle'), 'circle', 'single part kebab string');\n});\n\ntest('layerFactory', t => {\n\n    const TestClass = layerFactory([\n        {name: 'circle-sort-key'},\n        {name: 'visibility', defaultValue: 'visible'}\n    ], [\n        {name: 'circle-radius', defaultValue: 5},\n        {name: 'some-other'}\n    ], 'circle');\n\n    customElements.define('test-class', TestClass);\n\n    t.test('set the map property should add the layer to the underlying mapbox object', t => {\n        const fakeMethod = fake();\n        const map = {\n            addLayer: fakeMethod\n        };\n\n        const instance = new TestClass();\n\n        instance.setAttribute('layer-id', 'test-1');\n\n        instance.map = map;\n\n        t.ok(fakeMethod.calledOnce, 'addLayer should have been called once');\n        t.eq(fakeMethod.calls[0], [{\n            type: 'circle',\n            id: 'test-1',\n            paint: {'circle-radius': 5},\n            layout: {visibility: 'visible'}\n        }], 'should have forwarded \"type\", \"layer-id\" and built default \"paint\" and \"layout\"');\n\n    });\n\n    t.test('set the map property should add the layer to the underlying mapbox object and set sources and filter if specified ', t => {\n        const fakeMethod = fake();\n        const map = {\n            addLayer: fakeMethod\n        };\n\n        const instance = new TestClass();\n\n        instance.setAttribute('layer-id', 'test-2');\n        instance.setAttribute('source', 'mysource');\n        instance.setAttribute('source-layer', 'mysource-layer');\n        instance.setAttribute('filter', '[\\'==\\',\\'$type\\',\\'Polygon\\']');\n\n        instance.map = map;\n\n        t.ok(fakeMethod.calledOnce, 'addLayer should have been called once');\n        t.eq(fakeMethod.calls[0], [{\n            'type': 'circle',\n            'id': 'test-2',\n            'paint': {'circle-radius': 5},\n            'layout': {'visibility': 'visible'},\n            'source': 'mysource',\n            'source-layer': 'mysource-layer',\n            'filter': ['==', '$type', 'Polygon']\n        }], 'should have forwarded \"type\", \"layer-id\", \"source\",\"source-id\", \"filter\" and built default \"paint\" and \"layout\"');\n    });\n\n    t.test('should have forwarded \"type\", \"layer-id\" and built default \"paint\" and \"layout\" with provided value', t => {\n        const fakeMethod = fake();\n        const map = {\n            addLayer: fakeMethod\n        };\n\n        const instance = new TestClass();\n\n        instance.setAttribute('layer-id', 'test-3');\n        instance.setAttribute('circle-radius', '12');\n        instance.setAttribute('visibility', 'none');\n        instance.setAttribute('circle-sort-key', 'foo');\n        instance.setAttribute('some-other', 'value');\n\n        instance.map = map;\n\n        t.ok(fakeMethod.calledOnce, 'addLayer should have been called once');\n        t.eq(fakeMethod.calls[0], [{\n            'type': 'circle',\n            'id': 'test-3',\n            'paint': {'circle-radius': 12, 'some-other': 'value'},\n            'layout': {'circle-sort-key': 'foo', 'visibility': 'none'}\n        }], 'should have forwarded \"type\", \"layer-id\" and built \"paint\" and \"layout\" based on attributes values');\n    });\n\n    t.test('paint and layout propeties getters should have been created', t => {\n        const fakeMethod = fake();\n        const map = {\n            addLayer: fakeMethod\n        };\n        const instance = new TestClass();\n        instance.map = map;\n        t.eq(instance.circleRadius, 5, 'default value should be returned');\n        t.eq(instance.visibility, 'visible', 'default value should be returned');\n        t.eq(instance.someOther, null, 'null should be returned if not default value is specified');\n        t.eq(instance.circleSortKey, null, 'null should be returned if not default value is specified');\n    });\n\n    t.test('paint and layout should be observed attributes', t => {\n        t.eq(TestClass.observedAttributes, ['circle-radius', 'some-other', 'circle-sort-key', 'visibility']);\n    });\n\n    t.test('upgraded instance should set its slot attribute', t => {\n        const el = document.createElement('test-class');\n        document.querySelector('body').appendChild(el);\n        t.eq(el.getAttribute('slot'), 'layers');\n        el.remove();\n    });\n\n    t.test('when disconnecting element the layer should be remove', t => {\n        const el = document.createElement('test-class');\n        el.setAttribute('layer-id', 'test-X');\n        const fakeAddLayer = fake();\n        const fakeRemoveLayer = fake();\n        const map = {\n            addLayer: fakeAddLayer,\n            removeLayer: fakeRemoveLayer\n        };\n        document.querySelector('body').appendChild(el);\n        t.eq(el.getAttribute('slot'), 'layers');\n        el.map = map;\n        t.ok(fakeAddLayer.calledOnce);\n        t.eq(fakeRemoveLayer.calls.length, 0);\n        el.remove();\n        t.ok(fakeAddLayer.calledOnce);\n        t.ok(fakeRemoveLayer.calledOnce);\n        t.eq(fakeRemoveLayer.calls[0], ['test-X']);\n    });\n\n    t.test('setting paint and layout properties should reflect on attributes', t => {\n        const instance = new TestClass();\n\n        t.eq(instance.circleRadius, 5, 'default value should be returned');\n        t.eq(instance.visibility, 'visible', 'default value should be returned');\n        t.eq(instance.someOther, null, 'null should be returned if not default value is specified');\n        t.eq(instance.circleSortKey, null, 'null should be returned if not default value is specified');\n\n        instance.circleRadius = 12;\n        t.eq(instance.getAttribute('circle-radius'), '12');\n\n        instance.visibility = 'none';\n        t.eq(instance.getAttribute('visibility'), 'none');\n\n        instance.someOther = ['==', '$type', 'Polygon'];\n        t.eq(instance.getAttribute('some-other'), `['==','$type','Polygon']`, 'should reflect on array prop too');\n\n        instance.circleSortKey = ['==', '$type', 'Polygon'];\n        t.eq(instance.getAttribute('circle-sort-key'), `['==','$type','Polygon']`, 'should reflect on array prop too');\n    });\n\n    t.test('change in attributes should respectively call a repaint update and a layout update', t => {\n        const instance = new TestClass();\n        instance.setAttribute('layer-id', 'test-woot');\n        const setPaintProperty = fake();\n        const setLayoutProperty = fake();\n        const map = {\n            setLayoutProperty: setLayoutProperty,\n            setPaintProperty: setPaintProperty,\n            addLayer() {\n                // do nothing\n            }\n        };\n        instance.map = map;\n\n        instance.setAttribute('circle-radius', 12);\n        t.eq(instance.circleRadius, 12, 'property should have been updated');\n        t.ok(setPaintProperty.calledOnce);\n        t.eq(setLayoutProperty.callCount, 0);\n        t.eq(setPaintProperty.lastCall, ['test-woot', 'circle-radius', 12]);\n\n        instance.setAttribute('some-other', `['blah',[3,4]]`);\n        t.eq(instance.someOther, ['blah', [3, 4]]);\n        t.eq(setPaintProperty.callCount, 2);\n        t.eq(setLayoutProperty.callCount, 0);\n        t.eq(setPaintProperty.lastCall, ['test-woot', 'some-other', ['blah', [3, 4]]]);\n\n        instance.setAttribute('visibility', 'none');\n        t.eq(instance.visibility, 'none', 'property should have been updated');\n        t.eq(setPaintProperty.callCount, 2);\n        t.ok(setLayoutProperty.calledOnce);\n        t.eq(setLayoutProperty.lastCall, ['test-woot', 'visibility', 'none']);\n\n        instance.setAttribute('circle-sort-key', `['blah',[3,4]]`);\n        t.eq(instance.circleSortKey, ['blah', [3, 4]]);\n        t.eq(setPaintProperty.callCount, 2);\n        t.eq(setLayoutProperty.callCount, 2);\n        t.eq(setLayoutProperty.lastCall, ['test-woot', 'circle-sort-key', ['blah', [3, 4]]]);\n    });\n});\n\n"],"names":[],"mappings":"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"}