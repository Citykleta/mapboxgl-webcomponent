{"version":3,"file":"test.js","sources":["../../node_modules/zora/dist/bundle/module.js","../../src/util.js","../unit/helper.js","../unit/util.js","../../src/geo-json-source.js","../unit/geojson-source.js"],"sourcesContent":["const startTestMessage = (test, offset) => ({\n    type: \"TEST_START\" /* TEST_START */,\n    data: test,\n    offset\n});\nconst assertionMessage = (assertion, offset) => ({\n    type: \"ASSERTION\" /* ASSERTION */,\n    data: assertion,\n    offset\n});\nconst endTestMessage = (test, offset) => ({\n    type: \"TEST_END\" /* TEST_END */,\n    data: test,\n    offset\n});\nconst bailout = (error, offset) => ({\n    type: \"BAIL_OUT\" /* BAIL_OUT */,\n    data: error,\n    offset\n});\n\nconst delegateToCounter = (counter) => (target) => Object.defineProperties(target, {\n    skipCount: {\n        get() {\n            return counter.skipCount;\n        }\n    },\n    failureCount: {\n        get() {\n            return counter.failureCount;\n        }\n    },\n    successCount: {\n        get() {\n            return counter.successCount;\n        }\n    },\n    count: {\n        get() {\n            return counter.count;\n        }\n    }\n});\nconst counter = () => {\n    let success = 0;\n    let failure = 0;\n    let skip = 0;\n    return Object.defineProperties({\n        update(assertion) {\n            const { pass, skip: isSkipped } = assertion;\n            if (isSkipped) {\n                skip++;\n            }\n            else if (!isAssertionResult(assertion)) {\n                skip += assertion.skipCount;\n                success += assertion.successCount;\n                failure += assertion.failureCount;\n            }\n            else if (pass) {\n                success++;\n            }\n            else {\n                failure++;\n            }\n        }\n    }, {\n        successCount: {\n            get() {\n                return success;\n            }\n        },\n        failureCount: {\n            get() {\n                return failure;\n            }\n        },\n        skipCount: {\n            get() {\n                return skip;\n            }\n        },\n        count: {\n            get() {\n                return skip + success + failure;\n            }\n        }\n    });\n};\n\nconst defaultTestOptions = Object.freeze({\n    offset: 0,\n    skip: false,\n    runOnly: false\n});\nconst noop = () => {\n};\nconst TesterPrototype = {\n    [Symbol.asyncIterator]: async function* () {\n        await this.routine;\n        for (const assertion of this.assertions) {\n            if (assertion[Symbol.asyncIterator]) {\n                // Sub test\n                yield startTestMessage({ description: assertion.description }, this.offset);\n                yield* assertion;\n                if (assertion.error !== null) {\n                    // Bubble up the error and return\n                    this.error = assertion.error;\n                    this.pass = false;\n                    return;\n                }\n            }\n            yield assertionMessage(assertion, this.offset);\n            this.pass = this.pass && assertion.pass;\n            this.counter.update(assertion);\n        }\n        return this.error !== null ?\n            yield bailout(this.error, this.offset) :\n            yield endTestMessage(this, this.offset);\n    }\n};\nconst testerLikeProvider = (BaseProto = TesterPrototype) => (assertions, routine, offset) => {\n    const testCounter = counter();\n    const withTestCounter = delegateToCounter(testCounter);\n    let pass = true;\n    return withTestCounter(Object.create(BaseProto, {\n        routine: {\n            value: routine\n        },\n        assertions: {\n            value: assertions\n        },\n        offset: {\n            value: offset\n        },\n        counter: {\n            value: testCounter\n        },\n        length: {\n            get() {\n                return assertions.length;\n            }\n        },\n        pass: {\n            enumerable: true,\n            get() {\n                return pass;\n            },\n            set(val) {\n                pass = val;\n            }\n        }\n    }));\n};\nconst testerFactory = testerLikeProvider();\n\nconst tester = (description, spec, { offset = 0, skip = false, runOnly = false } = defaultTestOptions) => {\n    let executionTime = 0;\n    let error = null;\n    let done = false;\n    const assertions = [];\n    const collect = item => {\n        if (done) {\n            throw new Error(`test \"${description}\" \ntried to collect an assertion after it has run to its completion. \nYou might have forgotten to wait for an asynchronous task to complete\n------\n${spec.toString()}\n`);\n        }\n        assertions.push(item);\n    };\n    const specFunction = skip === true ? noop : function zora_spec_fn() {\n        return spec(assert(collect, offset, runOnly));\n    };\n    const testRoutine = (async function () {\n        try {\n            const start = Date.now();\n            const result = await specFunction();\n            executionTime = Date.now() - start;\n            return result;\n        }\n        catch (e) {\n            error = e;\n        }\n        finally {\n            done = true;\n        }\n    })();\n    return Object.defineProperties(testerFactory(assertions, testRoutine, offset), {\n        error: {\n            get() {\n                return error;\n            },\n            set(val) {\n                error = val;\n            }\n        },\n        executionTime: {\n            enumerable: true,\n            get() {\n                return executionTime;\n            }\n        },\n        skip: {\n            value: skip\n        },\n        description: {\n            enumerable: true,\n            value: description\n        }\n    });\n};\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\nconst isAssertionResult = (result) => {\n    return 'operator' in result;\n};\nconst specFnRegexp = /zora_spec_fn/;\nconst zoraInternal = /zora\\/dist\\/bundle/;\nconst filterStackLine = l => (l && !zoraInternal.test(l) && !l.startsWith('Error') || specFnRegexp.test(l));\nconst getAssertionLocation = () => {\n    const err = new Error();\n    const stack = (err.stack || '')\n        .split('\\n')\n        .map(l => l.trim())\n        .filter(filterStackLine);\n    const userLandIndex = stack.findIndex(l => specFnRegexp.test(l));\n    const stackline = userLandIndex >= 1 ? stack[userLandIndex - 1] : (stack[0] || 'N/A');\n    return stackline\n        .replace(/^at|^@/, '');\n};\nconst assertMethodHook = (fn) => function (...args) {\n    // @ts-ignore\n    return this.collect(fn(...args));\n};\nconst aliasMethodHook = (methodName) => function (...args) {\n    return this[methodName](...args);\n};\nconst AssertPrototype = {\n    equal: assertMethodHook((actual, expected, description = 'should be equivalent') => ({\n        pass: fastDeepEqual(actual, expected),\n        actual,\n        expected,\n        description,\n        operator: \"equal\" /* EQUAL */\n    })),\n    equals: aliasMethodHook('equal'),\n    eq: aliasMethodHook('equal'),\n    deepEqual: aliasMethodHook('equal'),\n    notEqual: assertMethodHook((actual, expected, description = 'should not be equivalent') => ({\n        pass: !fastDeepEqual(actual, expected),\n        actual,\n        expected,\n        description,\n        operator: \"notEqual\" /* NOT_EQUAL */\n    })),\n    notEquals: aliasMethodHook('notEqual'),\n    notEq: aliasMethodHook('notEqual'),\n    notDeepEqual: aliasMethodHook('notEqual'),\n    is: assertMethodHook((actual, expected, description = 'should be the same') => ({\n        pass: Object.is(actual, expected),\n        actual,\n        expected,\n        description,\n        operator: \"is\" /* IS */\n    })),\n    same: aliasMethodHook('is'),\n    isNot: assertMethodHook((actual, expected, description = 'should not be the same') => ({\n        pass: !Object.is(actual, expected),\n        actual,\n        expected,\n        description,\n        operator: \"isNot\" /* IS_NOT */\n    })),\n    notSame: aliasMethodHook('isNot'),\n    ok: assertMethodHook((actual, description = 'should be truthy') => ({\n        pass: Boolean(actual),\n        actual,\n        expected: 'truthy value',\n        description,\n        operator: \"ok\" /* OK */\n    })),\n    truthy: aliasMethodHook('ok'),\n    notOk: assertMethodHook((actual, description = 'should be falsy') => ({\n        pass: !Boolean(actual),\n        actual,\n        expected: 'falsy value',\n        description,\n        operator: \"notOk\" /* NOT_OK */\n    })),\n    falsy: aliasMethodHook('notOk'),\n    fail: assertMethodHook((description = 'fail called') => ({\n        pass: false,\n        actual: 'fail called',\n        expected: 'fail not called',\n        description,\n        operator: \"fail\" /* FAIL */\n    })),\n    throws: assertMethodHook((func, expected, description) => {\n        let caught;\n        let pass;\n        let actual;\n        if (typeof expected === 'string') {\n            [expected, description] = [description, expected];\n        }\n        try {\n            func();\n        }\n        catch (err) {\n            caught = { error: err };\n        }\n        pass = caught !== undefined;\n        actual = caught && caught.error;\n        if (expected instanceof RegExp) {\n            pass = expected.test(actual) || expected.test(actual && actual.message);\n            actual = actual && actual.message || actual;\n            expected = String(expected);\n        }\n        else if (typeof expected === 'function' && caught) {\n            pass = actual instanceof expected;\n            actual = actual.constructor;\n        }\n        return {\n            pass,\n            actual,\n            expected,\n            description: description || 'should throw',\n            operator: \"throws\" /* THROWS */\n        };\n    }),\n    doesNotThrow: assertMethodHook((func, expected, description) => {\n        let caught;\n        if (typeof expected === 'string') {\n            [expected, description] = [description, expected];\n        }\n        try {\n            func();\n        }\n        catch (err) {\n            caught = { error: err };\n        }\n        return {\n            pass: caught === undefined,\n            expected: 'no thrown error',\n            actual: caught && caught.error,\n            operator: \"doesNotThrow\" /* DOES_NOT_THROW */,\n            description: description || 'should not throw'\n        };\n    })\n};\nconst assert = (collect, offset, runOnly = false) => {\n    const actualCollect = item => {\n        if (!item.pass) {\n            item.at = getAssertionLocation();\n        }\n        collect(item);\n        return item;\n    };\n    const test = (description, spec, opts) => {\n        const options = Object.assign({}, defaultTestOptions, opts, { offset: offset + 1, runOnly });\n        const subTest = tester(description, spec, options);\n        collect(subTest);\n        return subTest.routine;\n    };\n    const skip = (description, spec, opts) => {\n        return test(description, spec, Object.assign({}, opts, { skip: true }));\n    };\n    return Object.assign(Object.create(AssertPrototype, { collect: { value: actualCollect } }), {\n        test(description, spec, opts = {}) {\n            if (runOnly) {\n                return skip(description, spec, opts);\n            }\n            return test(description, spec, opts);\n        },\n        skip(description, spec = noop, opts = {}) {\n            return skip(description, spec, opts);\n        },\n        only(description, spec, opts = {}) {\n            const specFn = runOnly === false ? _ => {\n                throw new Error(`Can not use \"only\" method when not in run only mode`);\n            } : spec;\n            return test(description, specFn, opts);\n        }\n    });\n};\n\nconst map = (fn) => async function* (stream) {\n    for await (const m of stream) {\n        yield fn(m);\n    }\n};\n// ! it mutates the underlying structure yet it is more efficient regarding performances\nconst flatten = map((m) => {\n    m.offset = 0;\n    return m;\n});\nconst isAssertionResult$1 = (result) => {\n    return 'operator' in result;\n};\nconst stringifySymbol = (key, value) => {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return value;\n};\n\n// @ts-ignore\nconst flatDiagnostic = ({ pass, description, ...rest }) => rest;\nconst Tap = {\n    print(message, offset = 0) {\n        this.log(message.padStart(message.length + (offset * 4))); // 4 white space used as indent (see tap-parser)\n    },\n    printYAML(obj, offset = 0) {\n        const YAMLOffset = offset + 0.5;\n        this.print('---', YAMLOffset);\n        for (const [prop, value] of Object.entries(obj)) {\n            this.print(`${prop}: ${JSON.stringify(value, stringifySymbol)}`, YAMLOffset + 0.5);\n        }\n        this.print('...', YAMLOffset);\n    },\n    printComment(comment, offset = 0) {\n        this.print(`# ${comment}`, offset);\n    },\n    printBailOut(message) {\n        this.print('Bail out! Unhandled error.');\n    },\n    printTestStart(message) {\n        const { data: { description }, offset } = message;\n        this.printComment(description, offset);\n    },\n    printTestEnd(message) {\n        // do nothing\n    },\n    printAssertion(message) {\n        const { data, offset } = message;\n        const { pass, description } = data;\n        const label = pass === true ? 'ok' : 'not ok';\n        if (isAssertionResult$1(data)) {\n            const id = this.nextId();\n            this.print(`${label} ${id} - ${description}`, offset);\n            if (pass === false) {\n                this.printYAML(flatDiagnostic(data), offset);\n            }\n        }\n        else if (data.skip) {\n            const id = this.nextId();\n            this.print(`${pass ? 'ok' : 'not ok'} ${id} - ${description} # SKIP`, offset);\n        }\n    },\n    printSummary(endMessage) {\n        this.print('', 0);\n        this.printComment(endMessage.data.pass ? 'ok' : 'not ok', 0);\n        this.printComment(`success: ${endMessage.data.successCount}`, 0);\n        this.printComment(`skipped: ${endMessage.data.skipCount}`, 0);\n        this.printComment(`failure: ${endMessage.data.failureCount}`, 0);\n    },\n    async report(stream) {\n        const src = flatten(stream);\n        let lastMessage = null;\n        this.print('TAP version 13');\n        for await (const message of src) {\n            lastMessage = message;\n            switch (message.type) {\n                case \"TEST_START\" /* TEST_START */:\n                    this.printTestStart(message);\n                    break;\n                case \"ASSERTION\" /* ASSERTION */:\n                    this.printAssertion(message);\n                    break;\n                case \"BAIL_OUT\" /* BAIL_OUT */:\n                    this.printBailOut(message);\n                    throw message.data;\n            }\n        }\n        this.print(`1..${lastMessage.data.count}`, 0);\n        this.printSummary(lastMessage);\n    }\n};\nconst factory = (log) => {\n    let i = 0;\n    return Object.create(Tap, {\n        nextId: {\n            enumerable: true,\n            value: () => {\n                return ++i;\n            }\n        },\n        log: { value: log }\n    });\n};\n\nconst indentedDiagnostic = ({ expected, pass, description, actual, operator, at = 'N/A', ...rest }) => ({\n    wanted: expected,\n    found: actual,\n    at,\n    operator,\n    ...rest\n});\nconst id = function* () {\n    let i = 0;\n    while (true) {\n        yield ++i;\n    }\n};\nconst idGen = () => {\n    let stack = [id()];\n    return {\n        [Symbol.iterator]() {\n            return this;\n        },\n        next() {\n            return stack[0].next();\n        },\n        fork() {\n            stack.unshift(id());\n        },\n        merge() {\n            stack.shift();\n        }\n    };\n};\nconst IndentedTap = Object.assign({}, Tap, {\n    printTestStart(message) {\n        const { data: { description }, offset } = message;\n        this.printComment(`Subtest: ${description}`, offset);\n    },\n    printAssertion(message) {\n        const { data, offset } = message;\n        const { pass, description } = data;\n        const label = pass === true ? 'ok' : 'not ok';\n        const id = this.nextId();\n        if (isAssertionResult$1(data)) {\n            this.print(`${label} ${id} - ${description}`, offset);\n            if (pass === false) {\n                this.printYAML(indentedDiagnostic(data), offset);\n            }\n        }\n        else {\n            const comment = data.skip === true ? 'SKIP' : `${data.executionTime}ms`;\n            this.print(`${pass ? 'ok' : 'not ok'} ${id} - ${description} # ${comment}`, message.offset);\n        }\n    },\n    printTestEnd(message) {\n        const length = message.data.length;\n        const { offset } = message;\n        this.print(`1..${length}`, offset);\n    }\n});\nconst factory$1 = (log) => {\n    const id = idGen();\n    return Object.create(IndentedTap, {\n        nextId: {\n            enumerable: true,\n            value: () => {\n                return id.next().value;\n            }\n        },\n        report: {\n            enumerable: true,\n            value: async function (stream) {\n                this.print('TAP version 13');\n                let lastMessage = null;\n                for await (const message of stream) {\n                    lastMessage = message;\n                    switch (message.type) {\n                        case \"TEST_START\" /* TEST_START */:\n                            id.fork();\n                            this.printTestStart(message);\n                            break;\n                        case \"ASSERTION\" /* ASSERTION */:\n                            this.printAssertion(message);\n                            break;\n                        case \"TEST_END\" /* TEST_END */:\n                            id.merge();\n                            this.printTestEnd(message);\n                            break;\n                        case \"BAIL_OUT\" /* BAIL_OUT */:\n                            this.printBailOut(message);\n                            throw message.data;\n                    }\n                }\n                this.printSummary(lastMessage);\n            }\n        },\n        log: { value: log }\n    });\n};\n\nconst report = (factory) => (logger = console) => {\n    const log = logger.log.bind(logger);\n    return async (stream) => factory(log).report(stream);\n};\nconst tapReporter = report(factory);\nconst indentedTapReporter = report(factory$1);\n\n//@ts-ignore\nconst mochaTapLike = indentedTapReporter();\n//@ts-ignore\nconst tapeTapLike = tapReporter();\n\nconst harnessFactory = ({ runOnly = false, indent = false } = {\n    runOnly: false,\n    indent: false\n}) => {\n    const tests = [];\n    const rootOffset = 0;\n    const collect = item => tests.push(item);\n    const api = assert(collect, rootOffset, runOnly);\n    let error = null;\n    const factory = testerLikeProvider(Object.assign(api, TesterPrototype, {\n        report: async function (reporter) {\n            const rep = reporter || (indent ? mochaTapLike : tapeTapLike);\n            return rep(this);\n        }\n    }));\n    return Object.defineProperties(factory(tests, Promise.resolve(), rootOffset), {\n        error: {\n            get() {\n                return error;\n            },\n            set(val) {\n                error = val;\n            }\n        }\n    });\n};\n\nconst findConfigurationFlag = (name) => {\n    if (typeof process !== 'undefined') {\n        return process.env[name] === 'true';\n        // @ts-ignore\n    }\n    else if (typeof window !== 'undefined') {\n        // @ts-ignore\n        return Boolean(window[name]);\n    }\n    return false;\n};\nconst defaultTestHarness = harnessFactory({\n    runOnly: findConfigurationFlag('RUN_ONLY')\n});\nlet autoStart = true;\nlet indent = findConfigurationFlag('INDENT');\nconst rootTest = defaultTestHarness.test.bind(defaultTestHarness);\nrootTest.indent = () => {\n    console.warn('indent function is deprecated, use \"INDENT\" configuration flag instead');\n    indent = true;\n};\nconst test = rootTest;\nconst skip = defaultTestHarness.skip.bind(defaultTestHarness);\nconst only = defaultTestHarness.only.bind(defaultTestHarness);\nrootTest.skip = skip;\nconst equal = defaultTestHarness.equal.bind(defaultTestHarness);\nconst equals = equal;\nconst eq = equal;\nconst deepEqual = equal;\nconst notEqual = defaultTestHarness.notEqual.bind(defaultTestHarness);\nconst notEquals = notEqual;\nconst notEq = notEqual;\nconst notDeepEqual = notEqual;\nconst is = defaultTestHarness.is.bind(defaultTestHarness);\nconst same = is;\nconst isNot = defaultTestHarness.isNot.bind(defaultTestHarness);\nconst notSame = isNot;\nconst ok = defaultTestHarness.ok.bind(defaultTestHarness);\nconst truthy = ok;\nconst notOk = defaultTestHarness.notOk.bind(defaultTestHarness);\nconst falsy = notOk;\nconst fail = defaultTestHarness.fail.bind(defaultTestHarness);\nconst throws = defaultTestHarness.throws.bind(defaultTestHarness);\nconst doesNotThrow = defaultTestHarness.doesNotThrow.bind(defaultTestHarness);\nconst createHarness = (opts = {}) => {\n    autoStart = false;\n    return harnessFactory(opts);\n};\nconst start = () => {\n    if (autoStart) {\n        defaultTestHarness.report(indent ? mochaTapLike : tapeTapLike);\n    }\n};\n// on next tick start reporting\n// @ts-ignore\nif (typeof window === 'undefined') {\n    setTimeout(start, 0);\n}\nelse {\n    // @ts-ignore\n    window.addEventListener('load', start);\n}\n\nexport { AssertPrototype, createHarness, deepEqual, doesNotThrow, eq, equal, equals, fail, falsy, is, isNot, mochaTapLike, notDeepEqual, notEq, notEqual, notEquals, notOk, notSame, ok, only, same, skip, tapeTapLike, test, throws, truthy };\n","const expressionTest = /^\\d|^\\[|^true|^false/;\n\nexport const parse = string => {\n    if (expressionTest.test(string)) {\n        return JSON.parse(string.replace(/'/g, '\"'));\n    }\n\n    //normal string\n    return string;\n};\n\nexport const stringify = val => typeof val === 'string' ? val : JSON\n    .stringify(val)\n    .replace(/\"/g, '\\'');\n\nexport const instanceToLayerProperties = instance => (acc, prop) => {\n    if ((prop.defaultValue !== void 0) || (instance[kebabToCamel(prop.name)] !== null)) {\n        acc[prop.name] = instance[kebabToCamel(prop.name)];\n    }\n    return acc;\n};\n\nexport const kebabToCamel = prop => prop\n    .split('-')\n    .map((word, index) => {\n        if (index === 0)\n            return word;\n\n        const [first, ...rest] = word;\n\n        return first.toUpperCase() + rest.join('');\n    })\n    .join('');\n\nconst layerEventsList = [\n    'mousedown', // ?\n    'mouseup',\n    'click',\n    'dblclick',\n    'mousemove',\n    'mouseenter',\n    'mouseleave',\n    'mouseover',\n    'mouseout',\n    'contextmenu',\n    'touchstart',\n    'touchend',\n    'touchcancel'\n];\n\nexport const layerFactory = (layoutProperties, paintProperties, layerType) => {\n\n    const klass = class extends HTMLElement {\n        static get observedAttributes() {\n            return [...paintProperties, ...layoutProperties]\n                .map(({name}) => name);\n        }\n\n        get filter() {\n            return parse(this.getAttribute('filter'));\n        }\n\n        set filter(value) {\n            this.setAttribute('filter', stringify(value));\n        }\n\n        attributeChangedCallback(name, oldValue, newValue) {\n            if (this._map) {\n                if (paintProperties.some(p => p.name === name)) {\n                    this._map.setPaintProperty(this.layerId, name, parse(newValue));\n                } else if (layoutProperties.some(p => p.name === name)) {\n                    this._map.setLayoutProperty(this.layerId, name, parse(newValue));\n                }\n            }\n        }\n\n        set map(value) {\n            if (value !== this._map) {\n                this._map = value;\n                const setProps = instanceToLayerProperties(this);\n                const paint = paintProperties.reduce(setProps, {});\n                const layout = layoutProperties.reduce(setProps, {});\n                const spec = {\n                    type: layerType,\n                    id: this.layerId,\n                    paint,\n                    layout\n                };\n\n                if (this.source) {\n                    spec.source = this.source;\n                }\n\n                if (this.sourceLayer) {\n                    spec['source-layer'] = this.sourceLayer;\n                }\n\n                if (this.filter) {\n                    spec.filter = this.filter;\n                }\n\n                this._map.addLayer(spec);\n\n                let listener;\n\n                while (listener = this._listenersQueue.shift()) {\n                    this._map.on(listener[0], this.layerId, listener[1]);\n                }\n\n            }\n        }\n\n        get layerId() {\n            return this.getAttribute('layer-id');\n        }\n\n        get source() {\n            return this.getAttribute('source');\n        }\n\n        get sourceLayer() {\n            return this.getAttribute('source-layer');\n        }\n\n        constructor() {\n            super();\n            this._listenersQueue = [];\n        }\n\n        connectedCallback() {\n            this.setAttribute('slot', 'layers');\n        }\n\n        disconnectedCallback() {\n            if (this._map) {\n                this._map.removeLayer(this.layerId);\n            }\n        }\n\n        addEventListener(type, listener, options) {\n            if (layerEventsList.includes(type)) {\n                if (this._map) {\n                    this._map.on(type, this.layerId, listener);\n                } else {\n                    this._listenersQueue.push([type, listener]);\n                }\n            } else {\n                super.addEventListener(type, listener, options);\n            }\n        }\n\n        removeEventListener(type, listener, options) {\n            if (layerEventsList.includes(type)) {\n                this._map.off(type, this.layerId, listener);\n            } else {\n                super.removeEventListener(type, listener, options);\n            }\n        }\n    };\n\n    for (const p of [...layoutProperties, ...paintProperties]) {\n        Object.defineProperty(klass.prototype, kebabToCamel(p.name), {\n            enumarable: true,\n            get() {\n                const attributeValue = parse(this.getAttribute(p.name));\n                return p.defaultValue !== void 0 ? (\n                        this.hasAttribute(p.name) ? attributeValue :\n                            p.defaultValue) :\n                    attributeValue;\n            },\n            set(value) {\n                this.setAttribute(p.name, stringify(value));\n            }\n        });\n    }\n\n    return klass;\n};\n","export const fake = () => {\n    const calls = [];\n    const fn = function (...args) {\n        calls.push(args);\n    };\n\n    Object.defineProperty(fn, 'calledOnce', {\n        get() {\n            return calls.length === 1;\n        }\n    });\n\n    Object.defineProperty(fn, 'calls', {\n        get() {\n            return calls;\n        }\n    });\n\n    Object.defineProperty(fn, 'callCount', {\n        get() {\n            return calls.length;\n        }\n    });\n\n    Object.defineProperty(fn, 'lastCall', {\n        get() {\n            return calls[calls.length - 1];\n        }\n    });\n\n    return fn;\n};\n","import {test} from 'zora';\nimport {kebabToCamel, layerFactory, parse, stringify} from '../../src/util.js';\nimport {fake} from './helper.js';\n\ntest('parse a number string should return a number', t => {\n    t.eq(parse('1'), 1);\n    t.eq(parse('0'), 0);\n    t.eq(parse('234'), 234);\n    t.eq(parse('3.14159'), 3.14159);\n});\n\ntest('parse boolean string should return a boolean', t => {\n    t.eq(parse('true'), true);\n    t.eq(parse('false'), false);\n});\n\ntest('parse array string should return an array', t => {\n    t.eq(parse('[1,true]'), [1, true]);\n    t.eq(parse(`[\"true\",'blah']`), ['true', 'blah'], 'should support single quoted string');\n    t.eq(parse('[\"foo\",[4, [true]]]'), ['foo', [4, [true]]], 'should support nested array');\n});\n\ntest('stringify string should return value as it is ', t => {\n    t.eq(stringify('foo bar'), 'foo bar');\n});\n\ntest('stringify boolean', t => {\n    t.eq(stringify(true), 'true');\n    t.eq(stringify(false), 'false');\n});\n\ntest('stringify numbers', t => {\n    t.eq(stringify(0), '0');\n    t.eq(stringify(12), '12');\n    t.eq(stringify(3.14159), '3.14159');\n});\n\ntest('stringify arrays', t => {\n    t.eq(stringify([4, true]), '[4,true]');\n    t.eq(stringify(['foo', 'bar']), `['foo','bar']`, 'string members should be single quoted');\n    t.eq(stringify(['foo', ['bar', [false, 4, 'hello']]]), `['foo',['bar',[false,4,'hello']]]`, 'should work on nexted structure');\n});\n\ntest('kebab to camel case', t => {\n    t.eq(kebabToCamel('circle-radius'), 'circleRadius');\n    t.eq(kebabToCamel('circle'), 'circle', 'single part kebab string');\n});\n\ntest('layerFactory', t => {\n\n    const TestClass = layerFactory([\n        {name: 'circle-sort-key'},\n        {name: 'visibility', defaultValue: 'visible'}\n    ], [\n        {name: 'circle-radius', defaultValue: 5},\n        {name: 'some-other'}\n    ], 'circle');\n\n    customElements.define('test-class', TestClass);\n\n    t.test('set the map property should add the layer to the underlying mapbox object', t => {\n        const fakeMethod = fake();\n        const map = {\n            addLayer: fakeMethod\n        };\n\n        const instance = new TestClass();\n\n        instance.setAttribute('layer-id', 'test-1');\n\n        instance.map = map;\n\n        t.ok(fakeMethod.calledOnce, 'addLayer should have been called once');\n        t.eq(fakeMethod.calls[0], [{\n            type: 'circle',\n            id: 'test-1',\n            paint: {'circle-radius': 5},\n            layout: {visibility: 'visible'}\n        }], 'should have forwarded \"type\", \"layer-id\" and built default \"paint\" and \"layout\"');\n\n    });\n\n    t.test('set the map property should add the layer to the underlying mapbox object and set sources and filter if specified ', t => {\n        const fakeMethod = fake();\n        const map = {\n            addLayer: fakeMethod\n        };\n\n        const instance = new TestClass();\n\n        instance.setAttribute('layer-id', 'test-2');\n        instance.setAttribute('source', 'mysource');\n        instance.setAttribute('source-layer', 'mysource-layer');\n        instance.setAttribute('filter', '[\\'==\\',\\'$type\\',\\'Polygon\\']');\n\n        instance.map = map;\n\n        t.ok(fakeMethod.calledOnce, 'addLayer should have been called once');\n        t.eq(fakeMethod.calls[0], [{\n            'type': 'circle',\n            'id': 'test-2',\n            'paint': {'circle-radius': 5},\n            'layout': {'visibility': 'visible'},\n            'source': 'mysource',\n            'source-layer': 'mysource-layer',\n            'filter': ['==', '$type', 'Polygon']\n        }], 'should have forwarded \"type\", \"layer-id\", \"source\",\"source-id\", \"filter\" and built default \"paint\" and \"layout\"');\n    });\n\n    t.test('should have forwarded \"type\", \"layer-id\" and built default \"paint\" and \"layout\" with provided value', t => {\n        const fakeMethod = fake();\n        const map = {\n            addLayer: fakeMethod\n        };\n\n        const instance = new TestClass();\n\n        instance.setAttribute('layer-id', 'test-3');\n        instance.setAttribute('circle-radius', '12');\n        instance.setAttribute('visibility', 'none');\n        instance.setAttribute('circle-sort-key', 'foo');\n        instance.setAttribute('some-other', 'value');\n\n        instance.map = map;\n\n        t.ok(fakeMethod.calledOnce, 'addLayer should have been called once');\n        t.eq(fakeMethod.calls[0], [{\n            'type': 'circle',\n            'id': 'test-3',\n            'paint': {'circle-radius': 12, 'some-other': 'value'},\n            'layout': {'circle-sort-key': 'foo', 'visibility': 'none'}\n        }], 'should have forwarded \"type\", \"layer-id\" and built \"paint\" and \"layout\" based on attributes values');\n    });\n\n    t.test('paint and layout propeties getters should have been created', t => {\n        const fakeMethod = fake();\n        const map = {\n            addLayer: fakeMethod\n        };\n        const instance = new TestClass();\n        instance.map = map;\n        t.eq(instance.circleRadius, 5, 'default value should be returned');\n        t.eq(instance.visibility, 'visible', 'default value should be returned');\n        t.eq(instance.someOther, null, 'null should be returned if not default value is specified');\n        t.eq(instance.circleSortKey, null, 'null should be returned if not default value is specified');\n    });\n\n    t.test('paint and layout should be observed attributes', t => {\n        t.eq(TestClass.observedAttributes, ['circle-radius', 'some-other', 'circle-sort-key', 'visibility']);\n    });\n\n    t.test('upgraded instance should set its slot attribute', t => {\n        const el = document.createElement('test-class');\n        document.querySelector('body').appendChild(el);\n        t.eq(el.getAttribute('slot'), 'layers');\n        el.remove();\n    });\n\n    t.test('when disconnecting element the layer should be remove', t => {\n        const el = document.createElement('test-class');\n        el.setAttribute('layer-id', 'test-X');\n        const fakeAddLayer = fake();\n        const fakeRemoveLayer = fake();\n        const map = {\n            addLayer: fakeAddLayer,\n            removeLayer: fakeRemoveLayer\n        };\n        document.querySelector('body').appendChild(el);\n        t.eq(el.getAttribute('slot'), 'layers');\n        el.map = map;\n        t.ok(fakeAddLayer.calledOnce);\n        t.eq(fakeRemoveLayer.calls.length, 0);\n        el.remove();\n        t.ok(fakeAddLayer.calledOnce);\n        t.ok(fakeRemoveLayer.calledOnce);\n        t.eq(fakeRemoveLayer.calls[0], ['test-X']);\n    });\n\n    t.test('setting paint and layout properties should reflect on attributes', t => {\n        const instance = new TestClass();\n\n        t.eq(instance.circleRadius, 5, 'default value should be returned');\n        t.eq(instance.visibility, 'visible', 'default value should be returned');\n        t.eq(instance.someOther, null, 'null should be returned if not default value is specified');\n        t.eq(instance.circleSortKey, null, 'null should be returned if not default value is specified');\n\n        instance.circleRadius = 12;\n        t.eq(instance.getAttribute('circle-radius'), '12');\n\n        instance.visibility = 'none';\n        t.eq(instance.getAttribute('visibility'), 'none');\n\n        instance.someOther = ['==', '$type', 'Polygon'];\n        t.eq(instance.getAttribute('some-other'), `['==','$type','Polygon']`, 'should reflect on array prop too');\n\n        instance.circleSortKey = ['==', '$type', 'Polygon'];\n        t.eq(instance.getAttribute('circle-sort-key'), `['==','$type','Polygon']`, 'should reflect on array prop too');\n    });\n\n    t.test('change in attributes should respectively call a repaint update and a layout update', t => {\n        const instance = new TestClass();\n        instance.setAttribute('layer-id', 'test-woot');\n        const setPaintProperty = fake();\n        const setLayoutProperty = fake();\n        const map = {\n            setLayoutProperty: setLayoutProperty,\n            setPaintProperty: setPaintProperty,\n            addLayer() {\n                // do nothing\n            }\n        };\n        instance.map = map;\n\n        instance.setAttribute('circle-radius', 12);\n        t.eq(instance.circleRadius, 12, 'property should have been updated');\n        t.ok(setPaintProperty.calledOnce);\n        t.eq(setLayoutProperty.callCount, 0);\n        t.eq(setPaintProperty.lastCall, ['test-woot', 'circle-radius', 12]);\n\n        instance.setAttribute('some-other', `['blah',[3,4]]`);\n        t.eq(instance.someOther, ['blah', [3, 4]]);\n        t.eq(setPaintProperty.callCount, 2);\n        t.eq(setLayoutProperty.callCount, 0);\n        t.eq(setPaintProperty.lastCall, ['test-woot', 'some-other', ['blah', [3, 4]]]);\n\n        instance.setAttribute('visibility', 'none');\n        t.eq(instance.visibility, 'none', 'property should have been updated');\n        t.eq(setPaintProperty.callCount, 2);\n        t.ok(setLayoutProperty.calledOnce);\n        t.eq(setLayoutProperty.lastCall, ['test-woot', 'visibility', 'none']);\n\n        instance.setAttribute('circle-sort-key', `['blah',[3,4]]`);\n        t.eq(instance.circleSortKey, ['blah', [3, 4]]);\n        t.eq(setPaintProperty.callCount, 2);\n        t.eq(setLayoutProperty.callCount, 2);\n        t.eq(setLayoutProperty.lastCall, ['test-woot', 'circle-sort-key', ['blah', [3, 4]]]);\n    });\n});\n\n","export const EMPTY_GEOJSON_SOURCE_DATA = Object.freeze({\n    type: 'FeatureCollection',\n    features: []\n});\n\nconst template = document.createElement('template');\ntemplate.innerHTML = `<slot name=\"layers\"></slot>`;\n\nexport class GeoJSONSource extends HTMLElement {\n\n    static get observedAttributes() {\n        return ['data-url'];\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (this._map) {\n            if (name === 'data-url' && oldValue !== newValue) {\n                this._map.getSource(this.sourceId).setData(newValue);\n            }\n        }\n    }\n\n    set map(value) {\n        if (value !== this._map) {\n            this._map = value;\n            this._map.addSource(this.sourceId, {\n                type: 'geojson',\n                data: this.dataUrl ? this.dataUrl : this.data\n            });\n            this._handleLayerChange();\n        }\n    }\n\n    get data() {\n        return Object.assign({}, this._data);\n    }\n\n    set data(value) {\n        this._data = value;\n        if (this._map) {\n            this._map.getSource(this.sourceId).setData(value);\n        }\n    }\n\n    get dataUrl() {\n        return this.getAttribute('data-url');\n    }\n\n    set dataUrl(value) {\n        this.setAttribute('data-url', value);\n    }\n\n    get sourceId() {\n        return this.getAttribute('source-id');\n    }\n\n    constructor() {\n        super();\n        this._data = EMPTY_GEOJSON_SOURCE_DATA;\n        this.attachShadow({mode: 'open'});\n        this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    connectedCallback() {\n        this.setAttribute('slot', 'sources');\n        this.shadowRoot.querySelector('slot').addEventListener('slotchange', this._handleLayerChange.bind(this));\n    }\n\n    disconnectedCallback() {\n        if (this._map) {\n            this._map.removeSource(this.sourceId);\n        }\n    }\n\n    _handleLayerChange() {\n        const layers = this.shadowRoot\n            .querySelector('slot[name=layers]')\n            .assignedNodes()\n            .filter(el => el.hasAttribute('layer-id'));\n        for (const layer of layers) {\n            layer.setAttribute('source', this.sourceId);\n            layer.map = this._map;\n        }\n    }\n}\n","import {test} from 'zora';\nimport {fake} from './helper.js';\nimport {EMPTY_GEOJSON_SOURCE_DATA, GeoJSONSource} from '../../src/geo-json-source.js';\n\ntest('geo source component', t => {\n    customElements.define('test-geojson', GeoJSONSource);\n\n    t.test('when connected, it should set its slot attribute', t => {\n        const el = document.createElement('test-geojson');\n        document\n            .querySelector('body')\n            .appendChild(el);\n\n        t.eq(el.getAttribute('slot'), 'sources');\n        el.remove();\n    });\n\n    t.test('add source when the map property is set', t => {\n        const addSource = fake();\n        const map = {\n            addSource\n        };\n        const el = new GeoJSONSource();\n        el.setAttribute('source-id', 'some_source');\n        el.map = map;\n        t.ok(addSource.calledOnce);\n        t.eq(addSource.calls[0], ['some_source', {\n            type: 'geojson',\n            data: EMPTY_GEOJSON_SOURCE_DATA\n        }]);\n    });\n\n    t.test('add source, when the data-url attribute is set, it should be forwarded', t => {\n        const addSource = fake();\n        const map = {\n            addSource\n        };\n        const el = new GeoJSONSource();\n        el.setAttribute('source-id', 'some_source');\n        el.setAttribute('data-url', 'http://example.com');\n        el.map = map;\n        t.ok(addSource.calledOnce);\n        t.eq(addSource.calls[0], ['some_source', {\n            type: 'geojson',\n            data: 'http://example.com'\n        }]);\n    });\n\n    t.test('should remove the source when element is disconnected', t => {\n        const removeSource = fake();\n        const addSource = fake();\n\n        const map = {\n            removeSource,\n            addSource\n        };\n\n        const el = document.createElement('test-geojson');\n        el.setAttribute('source-id', 'soouurrce');\n        document\n            .querySelector('body')\n            .appendChild(el);\n\n        el.map = map;\n\n        t.eq(el.getAttribute('slot'), 'sources');\n\n        el.remove();\n\n        t.ok(addSource.calledOnce);\n        t.ok(removeSource.calledOnce);\n        t.eq(removeSource.calls[0], ['soouurrce']);\n    });\n\n    t.test('when updating data-url attribute, source data should be changed', t => {\n        const addSource = fake();\n        const setData = fake();\n        const map = {\n            addSource,\n            getSource(id) {\n                if (id !== 'source') {\n                    throw new Error(`expected \"source\" but got ${id}`);\n                }\n                return {\n                    setData\n                };\n            }\n        };\n        const el = new GeoJSONSource();\n        el.setAttribute('source-id', 'source');\n        el.setAttribute('data-url', 'http://example.com');\n        el.map = map;\n        t.ok(addSource.calledOnce);\n        t.eq(addSource.calls[0], ['source', {\n            type: 'geojson',\n            data: 'http://example.com'\n        }]);\n        el.setAttribute('data-url', 'http://other.com');\n        t.ok(setData.calledOnce);\n        t.eq(setData.calls[0], ['http://other.com']);\n    });\n\n    t.test('when updating the data property, the source should update its data', t => {\n        const addSource = fake();\n        const setData = fake();\n        const map = {\n            addSource,\n            getSource(id) {\n                if (id !== 'source') {\n                    throw new Error(`expected \"source\" but got ${id}`);\n                }\n                return {\n                    setData\n                };\n            }\n        };\n        const el = new GeoJSONSource();\n        el.setAttribute('source-id', 'source');\n        el.map = map;\n        t.ok(addSource.calledOnce);\n        t.eq(addSource.calls[0], ['source', {\n            type: 'geojson',\n            data: EMPTY_GEOJSON_SOURCE_DATA\n        }]);\n        el.data = {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                geometry: {\n                    type: 'Point',\n                    coordinates: [-82, 23]\n                }\n            }]\n        };\n        t.ok(setData.calledOnce);\n        t.eq(setData.calls[0], [{\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                geometry: {\n                    type: 'Point',\n                    coordinates: [-82, 23]\n                }\n            }]\n        }]);\n    });\n\n    t.test('dataUrl property should reflect on data-url attribute', t => {\n        const el = new GeoJSONSource();\n        el.setAttribute('data-url', 'foo');\n        t.eq(el.dataUrl, 'foo');\n        el.dataUrl = 'anotherfoo';\n        t.eq(el.getAttribute('data-url'), 'anotherfoo');\n    });\n});\n"],"names":[],"mappings":"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"}